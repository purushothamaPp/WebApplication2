trigger:
- main

pr:
- '*'

jobs:
- job: BuildAndPublish
  displayName: 'Build and Publish'
  pool:
    name: 'Windows latest'  # Use the default self-hosted agent pool

  variables:
    solution: '**/*.sln'
    buildConfiguration: 'Release'

  steps:
  - checkout: self

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.0.x'  # Replace 'x' with the appropriate version of .NET SDK that supports .NET 6.0
      installationPath: $(Agent.ToolsDirectory)/dotnet  # Ensure 'dotnet' is added to the PATH

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '5.x.x'  # Use a version that is compatible with your project

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true'

  - task: DotNetCoreCLI@2
    displayName: 'Pack'
    inputs:
      command: pack
      packagesToPack: '**/*.csproj'
      configuration: '$(buildConfiguration)'
      versioningScheme: 'off'  # Turn off versioning to use the version specified in your project

  - task: NuGetCommand@2
    displayName: 'Push to Azure DevOps Artifacts'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'nuGetFeedServiceConnection'
      publishPackageMetadata: true
